{"version":3,"sources":["store/extra_state.js","store/notification.js","components/js/button/Button.js","components/js/button/ButtonContainer.js","containers/Choice.js","components/js/Modal.js","containers/JoinGame.js","store/game_state.js","components/js/board/Svg.js","components/js/board/Image.js","components/js/board/Cell.js","components/js/board/Row.js","components/js/board/PlayerInfo.js","components/js/board/GameInfo.js","components/js/board/Board.js","containers/MainBoard.js","components/js/notification/Notification.js","containers/Notification.js","App.js","index.js"],"names":["joinContextReducer","state","action","type","join","gameID","payload","notificationReducer","msg","console","log","undefined","Button","props","onClick","onClickHandler","className","extra_button_style","extra_text_style","text","ButtonContainer","hostGameHandler","createGameHandler","baseURL","Choice","history","useHistory","redirectTo","path","push","Modal","useState","setGameID","joinDispatcher","useContext","joinDispatcherContext","notificationDispatcher","notificationDispatchContext","verifyGameID","e","a","preventDefault","fetch","status","value","placeholder","maxLength","onChange","target","JoinGame","gameStateReducer","myTurn","gameStarted","row_num","col_num","matrix","Circle","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","Cancel","Image","imgID","Cell","gameState","gameContextState","connection","connectionContext","useMemo","temp","cell_num","split","parseInt","send","JSON","stringify","game_id","userType","Row","PlayerInfo","animationClass","name","GameInfo","React","createContext","Board","gameDispatcher","gameContextDispatch","joinState","joinStateContext","notificationDispatch","WebSocket","onopen","onmessage","data","parse","gameSettings","Provider","joinContextState","MainBoard","useReducer","dispatch","joinStateReducer","Notification","notificationStateContext","App","joinReducer","notificationState","exact","component","Choices","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bb33339.chunk.js","sourcesContent":["const joinContextReducer = (state, action) => {\n  switch (action.type) {\n    case \"JOIN\":\n      return { ...state, join: true, gameID: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default joinContextReducer;\n","const notificationReducer = (state, action) => {\n  switch (action.type) {\n    case \"SUCCESS\":\n      return { msg: action.payload, type: \"success\" };\n    case \"WARNING\":\n      return { msg: action.payload, type: \"info\" };\n    case \"ERROR\":\n      console.log(\"entered error case\");\n      return { msg: action.payload, type: \"error\" };\n    \n    case \"RESET\":\n      return{\n        msg:undefined, type:undefined\n      }\n    default:\n      return state;\n  }\n};\n\nexport default notificationReducer;\n","import React from \"react\";\nimport \"../../css/button/button.css\";\n\nconst Button = (props) => {\n  return (\n    <div\n      onClick={props.onClickHandler}\n      className={`button ${props.extra_button_style}`}\n    >\n      <p className={`button_text ${props.extra_text_style}`}>{props.text}</p>\n    </div>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"./Button\";\nimport \"../../css/button/button_container.css\";\n\nconst ButtonContainer = (props) => {\n  return (\n    <div className=\"button_container\">\n      <Button onClickHandler={props.hostGameHandler} text={\"Host Game\"} />\n      <Button onClickHandler={props.createGameHandler} text={\"Join Game\"} />\n    </div>\n  );\n};\n\nexport default ButtonContainer;\n","import React from \"react\";\nimport ButtonContainer from \"../components/js/button/ButtonContainer\";\n\nimport { useHistory } from \"react-router-dom\";\nconst baseURL = \"Online-Tic-Tac-Toe-frontend\";\nconst Choice = () => {\n  const history = useHistory();\n  const redirectTo = (path) => {\n    history.push(path);\n  };\n\n  return (\n    <ButtonContainer\n      hostGameHandler={() => redirectTo(`${baseURL}/game`)}\n      createGameHandler={() => redirectTo(`${baseURL}/join`)}\n    />\n  );\n};\n\nexport default Choice;\n","import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { joinDispatcherContext, notificationDispatchContext } from \"../../App\";\nimport Button from \"./button/Button\";\n\nimport \"../css/modal/modal.css\";\nconst baseURL = \"Online-Tic-Tac-Toe-frontend\";\nconst Modal = () => {\n  const [gameID, setGameID] = useState(\"\");\n  const history = useHistory();\n  const joinDispatcher = useContext(joinDispatcherContext);\n  const notificationDispatcher = useContext(notificationDispatchContext);\n\n  const verifyGameID = async (e) => {\n    e.preventDefault();\n    try {\n      const data = await fetch(`http://localhost:9000/${gameID}`);\n      if (data.status === 200) {\n        joinDispatcher({\n          type: \"JOIN\",\n          payload: gameID,\n        });\n        notificationDispatcher({\n          type: \"SUCCESS\",\n          payload: \"Start playing\",\n        });\n        notificationDispatcher({\n          type: \"RESET\",\n        });\n        //redirect to the game board\n\n        history.push(`${baseURL}/game`);\n      }\n      //pushing to board\n    } catch (e) {\n      notificationDispatcher({\n        type: \"ERROR\",\n        payload: \"Invalid GameID\",\n      });\n\n      notificationDispatcher({\n        type: \"RESET\",\n      });\n    }\n  };\n\n  return (\n    <div className=\"modal_container_wrapper\">\n      <div className=\"modal_container\">\n        <input\n          value={gameID}\n          className=\"modal_input\"\n          placeholder={\"enter game id\"}\n          maxLength=\"15\"\n          onChange={(e) => setGameID(e.target.value)}\n        />\n        <Button\n          onClickHandler={verifyGameID}\n          extra_button_style=\"button_override\"\n          text={\"Join game\"}\n          extra_text_style={\"button_text_override\"}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\n\nimport JoinGameModal from \"../components/js/Modal\";\n\nconst JoinGame = () => {\n  return <JoinGameModal />;\n};\n\nexport default JoinGame;\n","const gameStateReducer = (state, action) => {\n  switch (action.type) {\n    case \"SWITCH_TURN\":\n      return {\n        ...state,\n        myTurn: action.payload,\n      };\n    case \"SET_GAME_ID\":\n      return {\n        ...state,\n        gameID: action.payload,\n      };\n\n    case \"SET_GAME_CONFIG\":\n      return {\n        ...state,\n        ...action.payload,\n        gameStarted: true,\n      };\n\n    case \"JOIN\":\n      return {\n        ...state,\n        join: true,\n      };\n    case \"UPDATE_MATRIX\":\n      const value = action.payload.value;\n      const [row_num, col_num] = action.payload[\"cell_num\"];\n      state[\"matrix\"][row_num][col_num] = value;\n\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    case \"RESET\":\n      const matrix = [\n        [undefined, undefined, undefined],\n        [undefined, undefined, undefined],\n        [undefined, undefined, undefined],\n      ];\n      return {\n        ...state,\n        matrix: matrix,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default gameStateReducer;\n","import React from \"react\";\nimport \"../../css/Board/image.css\";\nexport const Circle = () => (\n  <svg\n    className=\"svg-image\"\n    width=\"40\"\n    height=\"40\"\n    viewBox=\"0 0 189 189\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M94.5 189C146.691 189 189 146.691 189 94.5C189 42.3091 146.691 0 94.5 0C42.3091 0 0 42.3091 0 94.5C0 146.691 42.3091 189 94.5 189ZM94.5 153C126.809 153 153 126.809 153 94.5C153 62.1913 126.809 36 94.5 36C62.1913 36 36 62.1913 36 94.5C36 126.809 62.1913 153 94.5 153Z\"\n      fill=\"white\"\n    />\n  </svg>\n);\n\nexport const Cancel = () => (\n  <svg\n    className=\"svg-image\"\n    width=\"40\"\n    height=\"40\"\n    viewBox=\"0 0 75 69\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M73.6711 2.56469L72.2123 1.2226C71.3614 0.439784 70.2074 0 69.004 0C67.8007 0 66.6466 0.439784 65.7957 1.2226L37.5 27.2547L9.20425 1.2226C8.35337 0.439784 7.19932 0 5.99598 0C4.79264 0 3.6386 0.439784 2.78771 1.2226L1.32891 2.56469C0.907596 2.9523 0.573389 3.41246 0.345374 3.9189C0.117359 4.42534 0 4.96814 0 5.5163C0 6.06447 0.117359 6.60727 0.345374 7.11371C0.573389 7.62015 0.907596 8.0803 1.32891 8.46791L29.6247 34.5L1.32891 60.5321C0.907596 60.9197 0.573389 61.3799 0.345374 61.8863C0.117359 62.3927 0 62.9355 0 63.4837C0 64.0319 0.117359 64.5747 0.345374 65.0811C0.573389 65.5875 0.907596 66.0477 1.32891 66.4353L2.78771 67.7774C3.6386 68.5602 4.79264 69 5.99598 69C7.19932 69 8.35337 68.5602 9.20425 67.7774L37.5 41.7453L65.7957 67.7774C66.6466 68.5602 67.8007 69 69.004 69C70.2074 69 71.3614 68.5602 72.2123 67.7774L73.6711 66.4353C74.522 65.6525 75 64.5908 75 63.4837C75 62.3766 74.522 61.3149 73.6711 60.5321L45.3753 34.5L73.6711 8.46791C74.522 7.6851 75 6.62337 75 5.5163C75 4.40923 74.522 3.34751 73.6711 2.56469V2.56469Z\"\n      fill=\"white\"\n    />\n  </svg>\n);\n","import React from \"react\";\nimport { Cancel, Circle } from \"./Svg\";\n\nconst Image = (props) => {\n  if (props.imgID !== undefined) {\n    if (props.imgID % 2 === 0) {\n      return <Circle />;\n    } else {\n      return <Cancel />;\n    }\n  } else return <></>;\n};\nexport default Image;\n","import React, { useContext, useMemo } from \"react\";\nimport { gameContextState } from \"../../../containers/MainBoard\";\nimport { connectionContext } from \"./Board\";\nimport Image from \"./Image\";\nimport \"../../css/Board/cell.css\";\n\nconst Cell = (props) => {\n  const gameState = useContext(gameContextState);\n  const connection = useContext(connectionContext);\n  //memoiszation of row num and col num\n  const [row_num, col_num] = useMemo(() => {\n    const temp = props.cell_num.split(\"_\");\n    const row_num = parseInt(temp[0]);\n    const col_num = parseInt(temp[1]);\n    return [row_num, col_num];\n  }, []);\n\n  const value = gameState.matrix[row_num][col_num];\n  const handleChange = () => {\n    connection.send(\n      JSON.stringify({\n        action: \"update\",\n        game_id: gameState.gameID,\n        userType: gameState.userType,\n        cell_num: props.cell_num,\n      })\n    );\n  };\n  //if matrix value is undefined\n  if (value !== undefined) {\n    return (\n      <div className=\"cell\">\n        <Image imgID={value % 2} />\n      </div>\n    );\n  }\n  //else render the empty cell\n  else {\n    return (\n      <div\n        className=\"cell\"\n        onClick={gameState.myTurn & gameState.gameStarted ? handleChange : null}\n      ></div>\n    );\n  }\n};\n\nexport default Cell;\n","import React from \"react\";\nimport Cell from \"./Cell\";\nimport \"../../css/Board/row.css\";\n\nconst Row = (props) => {\n  return (\n    <div className=\"row\">\n      <Cell cell_num={`${props.row_num}_0`} />\n      <Cell cell_num={`${props.row_num}_1`} />\n      <Cell cell_num={`${props.row_num}_2`} />\n    </div>\n  );\n};\n\nexport default Row;\n","import React from \"react\";\nimport Image from \"./Image\";\n\nconst PlayerInfo = (props) => {\n  return (\n    <div>\n      <h3 className={`${props.animationClass}`}>{props.name}</h3>\n      <Image imgID={props.imgID}/>\n    </div>\n  );\n};\n\nexport default PlayerInfo;\n","import React, { useContext } from \"react\";\n\nimport { gameContextState } from \"../../../containers/MainBoard\";\nimport PlayerInfo from \"./PlayerInfo\";\nimport \"../../css/Board/game_info.css\";\nconst GameInfo = () => {\n  const state = useContext(gameContextState);\n  if (state.gameStarted) {\n    return (\n      <div className=\"player-info\">\n        <PlayerInfo\n          imgID={state.userType}\n          name={\"You\"}\n          animationClass={state.myTurn ? \"player-active\" : null}\n        />\n        <PlayerInfo\n          imgID={(state.userType + 1) % 2}\n          name={\"Opponent\"}\n          animationClass={!state.myTurn ? \"player-active\" : null}\n        />\n      </div>\n    );\n  } else {\n    return <h6 className=\"show-info\">Share this gameId and start playing</h6>;\n  }\n};\n\nexport default GameInfo;\n","import React, { useContext } from \"react\";\nimport {\n  gameContextDispatch,\n  gameContextState,\n} from \"../../../containers/MainBoard\";\nimport { joinStateContext, notificationDispatchContext } from \"../../../App\";\nimport Row from \"./Row\";\nimport GameInfo from \"./GameInfo\";\nimport \"../../css/Board/board.css\";\n\nlet connection = null;\nexport const connectionContext = React.createContext();\nconst Board = (props) => {\n  //context of connection\n\n  //using opponent context\n  const gameState = useContext(gameContextState);\n  const gameDispatcher = useContext(gameContextDispatch);\n  //using game_state_context\n\n  //using join context\n  const joinState = useContext(joinStateContext);\n\n  //notification dispatcher\n  const notificationDispatch = useContext(notificationDispatchContext);\n  //creating a connection object\n  if (!connection) {\n    connection = new WebSocket(\"ws://localhost:9000\");\n    connection.onopen = () => {\n      if (joinState) {\n        connection.send(\n          JSON.stringify({ action: \"join_game\", game_id: joinState.gameID })\n        );\n      } else {\n        connection.send(JSON.stringify({ action: \"create_game\" }));\n      }\n    };\n\n    connection.onmessage = (msg) => {\n      const data = JSON.parse(msg.data);\n\n      const action = data[\"action\"];\n      if (action === \"set_game_id\") {\n        //set the host gameID\n        setGameID(data[\"gameID\"]);\n      }\n      //if it's opponent turn\n      else if (action === \"opponent_turn\") {\n        gameDispatcher({\n          type: \"SWITCH_TURN\",\n          payload: false,\n        });\n      }\n      if (action === \"game_settings\") {\n        //game settings handler\n        gameSettings(data);\n      } else if (action === \"update_matrix\") {\n        gameDispatcher({\n          type: \"UPDATE_MATRIX\",\n          payload: data,\n        });\n      }\n\n      //if it's a draw\n      else if (action === \"draw\") {\n        notificationDispatch({\n          type: \"WARNING\",\n          payload: \"match draw\",\n        });\n\n        gameDispatcher({\n          type: \"RESET\",\n          payload: data,\n        });\n        notificationDispatch({\n          type: \"RESET\",\n        });\n      }\n      //if you lost\n      else if (action === \"you_lost\") {\n        //you lost handler\n        notificationDispatch({\n          type: \"ERROR\",\n          payload: \"You lost\",\n        });\n\n        gameDispatcher({\n          type: \"RESET\",\n          payload: data,\n        });\n        notificationDispatch({\n          type: \"RESET\",\n        });\n      }\n      //if you won\n      else if (action === \"you_won\") {\n        //you won handler\n\n        notificationDispatch({\n          type: \"SUCCESS\",\n          payload: \"You won\",\n        });\n        gameDispatcher({\n          type: \"RESET\",\n          payload: data,\n        });\n        notificationDispatch({\n          type: \"RESET\",\n        });\n      }\n    };\n  }\n\n  //utilities for connection\n  const setGameID = (gameID) => {\n    gameDispatcher({\n      type: \"SET_GAME_ID\",\n      payload: gameID,\n    });\n  };\n\n  const gameSettings = (data) => {\n    //sets the gameVariable\n    gameDispatcher({ type: \"SET_GAME_CONFIG\", payload: data });\n  };\n\n  return (\n    <connectionContext.Provider value={connection}>\n      <div className=\"board\">\n        <h2 className=\"board-heading\">Game id : {gameState.gameID}</h2>\n        <Row row_num={\"0\"} />\n        <Row row_num={\"1\"} />\n        <Row row_num={\"2\"} />\n        <GameInfo />\n      </div>\n    </connectionContext.Provider>\n  );\n};\n\nexport default Board;\n","import React, { useReducer } from \"react\";\nimport gameStateReducer from \"../store/game_state\";\nimport joinStateReducer from \"../store/extra_state\";\nimport Board from \"../components/js/board/Board\";\n\n//game state state\nexport const gameContextDispatch = React.createContext();\nexport const gameContextState = React.createContext();\n\n//extra state for setting flag\nexport const joinContextState = React.createContext();\n\nconst matrix = [\n  [undefined, undefined, undefined],\n  [undefined, undefined, undefined],\n  [undefined, undefined, undefined],\n];\n\nconst MainBoard = () => {\n  const [state, dispatch] = useReducer(gameStateReducer, {\n    myTurn: false,\n    gameStarted: false,\n    matrix,\n  });\n\n  //join state,\n  const joinState = useReducer(joinStateReducer)[0];\n\n  return (\n    <gameContextDispatch.Provider value={dispatch}>\n      <gameContextState.Provider value={state}>\n        <joinContextState.Provider value={joinState}>\n          <Board />\n        </joinContextState.Provider>\n      </gameContextState.Provider>\n    </gameContextDispatch.Provider>\n  );\n};\n\nexport default MainBoard;\n","import React from \"react\";\nimport \"../../css/notification/notification.css\";\n\nconst Notification = (props) => {\n  return (\n    <div className=\"notification-container\">\n      <p className=\"notification-message\">{props.state.msg}</p>\n      <div className={`${props.state.type}`}></div>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { useContext } from \"react\";\nimport { notificationStateContext } from \"../App\";\n\nimport Notifier from \"../components/js/notification/Notification\";\n\nconst Notification = () => {\n  const state = useContext(notificationStateContext);\n  if (state) {\n    return <Notifier state={state} />;\n  } else {\n    return <></>;\n  }\n};\nexport default Notification;\n","import React, { useReducer } from \"react\";\nimport joinReducer from \"./store/extra_state\";\nimport notificationReducer from \"./store/notification\";\nimport Choices from \"./containers/Choice\";\nimport JoinGame from \"./containers/JoinGame\";\nimport MainBoard from \"./containers/MainBoard\";\nimport Notification from \"./containers/Notification\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n//join context\nexport const joinStateContext = React.createContext();\nexport const joinDispatcherContext = React.createContext();\n\n//notification context\nexport const notificationStateContext = React.createContext();\nexport const notificationDispatchContext = React.createContext();\n\nconst baseURL = \"Online-Tic-Tac-Toe-frontend\";\nconst App = () => {\n  const [joinState, joinDispatcher] = useReducer(joinReducer);\n  const [notificationState, notificationDispatch] = useReducer(\n    notificationReducer\n  );\n  return (\n    <Router>\n      <notificationStateContext.Provider value={notificationState}>\n        <notificationDispatchContext.Provider value={notificationDispatch}>\n          <joinDispatcherContext.Provider value={joinDispatcher}>\n            <joinStateContext.Provider value={joinState}>\n              <Notification />\n              <Route exact path={`${baseURL}/`} component={Choices} />\n              <Route exact path={`${baseURL}/join`} component={JoinGame} />\n              <Route exact path={`${baseURL}/game`} component={MainBoard} />\n            </joinStateContext.Provider>\n          </joinDispatcherContext.Provider>\n        </notificationDispatchContext.Provider>\n      </notificationStateContext.Provider>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}